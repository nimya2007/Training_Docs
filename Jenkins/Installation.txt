#Jenkins Master Slave Configuration: 

#Launch New AWS Linux Instances

#Jenkins Master, Node1, Node2

#Launch AWS Linux Instance with port 8080 & Name Tag
#Update the Instance

#Execute only in Master:

#Jenkins Installation Steps:
#Launch AWS Linux Instance with port 8080 & Name Tag
#Update the Instance

sudo -i

yum update -y

#Install Jenkins :

sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key

#Install epel Package:
amazon-linux-extras install epel

#Install Java: 
amazon-linux-extras install java-openjdk11

yum install jenkins 

#Start Jenkins:

# Start jenkins service
#service jenkins start
#systemctl 


# Setup Jenkins to start at boot,
#chkconfig jenkins on

systemctl status jenkins

systemctl enable jenkins
systemctl start jenkins


#systemctl enable tomcat
#systemctl start tomcat

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Execute in Slave Nodes:

#Install epel Package:
amazon-linux-extras install epel

#Install Java: 
amazon-linux-extras install java-openjdk11

#Install GIT:

yum install git -y

#Install Maven:

sudo wget https://dlcdn.apache.org/maven/maven-3/3.9.0/binaries/apache-maven-3.9.0-bin.tar.gz
sudo tar xf apache-maven-3.9.0-bin.tar.gz -C /opt
#Create a symlink for Apache maven directory to update the maven versions
sudo ln -s /opt/apache-maven-3.9.0 /opt/maven

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`````

#Set Java Path / Environment Variables:

## Check the java installed version:
#cd /usr/lib/jvm/

#eg: /usr/lib/jvm/java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64

#open .bash_profile & add the following lines:

#jjava-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64 


export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64"
export MAVEN_HOME=/opt/apache-maven-3.8.7
export M2=/opt/apache-maven-3.8.7/bin
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$MAVEN_HOME:$M2

source ~/.bash_profile
source ~/.bashrc

#open .bashrc & add the following lines:
#export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-1.amzn2.0.1.x86_64"
#export MAVEN_HOME=/opt/apache-maven-3.8.7
#export M2=/opt/apache-maven-3.8.7/bin
#PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$MAVEN_HOME:$M2

#source ~/.bash_profile

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#********************************************************************************************
#********************************************************************************************
#********************************************************************************************

#********************************************************************************************
#********************************************************************************************
#********************************************************************************************

#Add User : 

useradd -m -d /home/devopsadmin devopsadmin

su - devopsadmin

ssh-keygen

ls ~/.ssh 

#You should see following two files:

#id_rsa - private key
#id_rsa.pub - public
cd .ssh/
#cat id_rsa & copy the private key and paste it into jenkins node config. enter private key directly field.  Then,
cat id_rsa.pub > authorized_keys
from devopsadmin user:
chown -R devopsadmin /home/devopsadmin/.ssh
chmod 600 /home/devopsadmin/.ssh/authorized_keys
chmod 700 /home/devopsadmin/.ssh

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Login to Jenkins thru browser, Go to Manage Jenkins --> Config Nodes -- > Add New Node 

Config the Node Name, Label, Access thru SSH Parm - user Name, with private key

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~``

Goto Global Tools config. Settings and ADD Maven Installation Details.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
